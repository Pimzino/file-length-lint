{
  "name": "file-length-lint",
  "displayName": "File Length Lint",
  "description": "A lightweight extension to lint files based on their length",
  "version": "0.0.6",
  "publisher": "Pimzino",
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Pimzino/file-length-lint"
  },
  "license": "MIT",
  "keywords": [
    "lint",
    "linter",
    "file-length",
    "code-quality",
    "best-practices"
  ],
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Linters",
    "Formatters",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "fileLengthLint.scanWorkspace",
        "title": "File Length Lint: Scan Workspace"
      },
      {
        "command": "fileLengthLint.resetSettings",
        "title": "File Length Lint: Reset All Settings to Defaults"
      }
    ],
    "configuration": {
      "title": "File Length Lint",
      "properties": {
        "fileLengthLint.maxLines": {
          "type": "number",
          "default": 500,
          "minimum": 1,
          "description": "Maximum number of lines allowed in a file before showing a lint error"
        },
        "fileLengthLint.languageSpecificMaxLines": {
          "type": "object",
          "default": {
            "javascript": 500,
            "typescript": 500,
            "json": 5000,
            "html": 800
          },
          "description": "Language-specific maximum line counts. Overrides the global maxLines setting for specified languages."
        },
        "fileLengthLint.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable file length linting"
        },
        "fileLengthLint.exclude": {
          "type": "array",
          "default": [
            "**/.git/**",
            "**/node_modules/**",
            "**/dist/**",
            "**/out/**",
            "**/bin/**",
            "**/obj/**",
            "**/.vs/**",
            "**/.idea/**",
            "**/.vscode/settings.json",
            "**/*.min.js",
            "**/*.min.css",
            "**/*.dll",
            "**/*.exe",
            "**/*.png",
            "**/*.jpg",
            "**/*.jpeg",
            "**/*.gif",
            "**/*.ico",
            "**/*.svg",
            "**/*.woff",
            "**/*.woff2",
            "**/*.ttf",
            "**/*.eot",
            "**/*.pdf",
            "**/*.zip",
            "**/*.tar",
            "**/*.gz",
            "**/*.7z"
          ],
          "description": "Glob patterns to exclude from file length linting"
        },
        "fileLengthLint.respectGitignore": {
          "type": "boolean",
          "default": true,
          "description": "Respect .gitignore files when scanning for files to lint"
        },
        "fileLengthLint.realtimeScanningEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time scanning of files in the workspace"
        },
        "fileLengthLint.customQuickFixMessage": {
          "type": "string",
          "default": "",
          "description": "Custom message to append to the quick fix suggestion. For example: 'Please consider refactoring this file according to our team guidelines.'"
        },
        "fileLengthLint.disabledLanguages": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "List of language IDs for which linting should be disabled. For example: ['markdown', 'json', 'yaml']"
        },
        "fileLengthLint.measurementType": {
          "type": "string",
          "enum": [
            "lines",
            "tokens"
          ],
          "default": "lines",
          "description": "Measurement type to use for file length linting. 'lines' counts the number of lines in a file, 'tokens' estimates the number of tokens that would be used by an LLM (using the approximation of 4 characters ≈ 1 token)."
        },
        "fileLengthLint.maxTokens": {
          "type": "number",
          "default": 2000,
          "minimum": 1,
          "description": "Maximum number of tokens allowed in a file before showing a lint error (only used when measurementType is set to 'tokens'). For LLMs, approximately 4 characters ≈ 1 token."
        },
        "fileLengthLint.languageSpecificMaxTokens": {
          "type": "object",
          "default": {
            "javascript": 2000,
            "typescript": 2000,
            "json": 8000,
            "html": 3000
          },
          "description": "Language-specific maximum token counts. Overrides the global maxTokens setting for specified languages (only used when measurementType is set to 'tokens'). For LLMs, approximately 4 characters ≈ 1 token."
        },
        "fileLengthLint.maxFileSizeInMB": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum file size in MB to process. Files larger than this will be skipped to prevent memory issues. Default is 5MB."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && node esbuild.js",
    "check-types": "tsc --noEmit",
    "watch": "npm run check-types && node esbuild.js --watch",
    "package": "npm run check-types && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "pretest": "npm run compile-tests && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "gpt-tokenizer": "^2.9.0",
    "ignore": "^5.3.1",
    "minimatch": "^9.0.3",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-textdocument": "^1.0.4",
    "vscode-uri": "^3.0.3"
  },
  "devDependencies": {
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.2",
    "eslint": "^9.21.0",
    "typescript": "^5.7.3"
  }
}
